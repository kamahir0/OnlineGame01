// Program.cs
using OnlineGame01;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.EntityFrameworkCore;
using Microsoft.IdentityModel.Tokens;
using System.Text;

var builder = WebApplication.CreateBuilder(args);

// --- サービスの登録セクション ---

// CORSポリシーを追加
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowAll", policy =>
    {
        policy.AllowAnyOrigin()
              .AllowAnyMethod()
              .AllowAnyHeader();
    });
});

builder.Services.AddControllers();

// DbContextの登録方法を変更
// appsettings.jsonの"ConnectionStrings"から接続情報を読み込む
builder.Services.AddDbContext<GameDbContext>(options =>
    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));

builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// JWT認証の設定を更新
builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuerSigningKey = true,
            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration["Jwt:Key"])),
            ValidateIssuer = false, // 開発中は検証を無効化
            ValidateAudience = false // 開発中は検証を無効化
        };
    });


// --- アプリケーションの構築 ---
var app = builder.Build();

// アプリケーションのスコープを作成
using (var scope = app.Services.CreateScope())
{
    var services = scope.ServiceProvider;
    try
    {
        // GameDbContextインスタンスを取得
        var context = services.GetRequiredService<GameDbContext>();
        // 保留中のマイグレーションをデータベースに適用する
        // データベースが存在しない場合は、データベースも作成される
        context.Database.Migrate();
    }
    catch (Exception ex)
    {
        // エラーハンドリング（開発中はログに出力するのが一般的）
        var logger = services.GetRequiredService<ILogger<Program>>();
        logger.LogError(ex, "An error occurred during migration.");
    }
}

// --- HTTPリクエストパイプラインの設定セクション ---
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

// CORSを有効にする
app.UseCors("AllowAll");

app.UseAuthentication();
app.UseAuthorization();

app.MapControllers();

// --- アプリケーションの実行 ---
app.Run();